import "common.api"

info(
	title: "角色相关接口"
	author: "wangxianchao"
	email: "995166545@qq.com"
)

type (
	RoleInfo {
		Name string `json:"name"`
		Desc string `json:"desc"`
	}

	RoleDetail {
		Id       int64 `json:"id"`
		CreateAt int64 `json:"createAt"`
		RoleInfo
	}

	CreateRoleReq {
		RoleInfo
	}

	CreateRoleResp {
		Id int64 `json:"id"`
	}

	DeleteRoleReq {
		Id int64 `path:"id"`
	}

	DeleteRoleResp {
		Id int64 `json:"id"`
	}

	UpdateRoleReq {
		Id int64 `path:"id"`
		RoleInfo
	}

	UpdateRoleResp {
		Id int64 `json:"id"`
	}

	PatchRoleReq {
		Id int64 `path:"id"`
		RoleInfo
	}

	PatchRoleResp {
		Id int64 `json:"id"`
	}

	GetRoleReq {
		Id int64 `path:"id"`
	}

	GetRoleResp {
		RoleDetail
	}

	QueryRoleParam {
		UserName string `path:"userName,optional"`
		RoleName string `path:"roleName,optioanl"`
	}
	ListRoleReq {
		ListReq
		QueryRoleParam
	}

	ListRoleResp {
		ListResp
		Roles []RoleDetail `json:"list"`
	}

	ListUserRolesReq {
		ListReq
	}

	RoleUserInfo {
		UserId int64 `json:"userId"`
		RoleId int64 `json:"roleId"`
	}

	RoleUserDetail {
		Id       int64  `json:"id"`
		UserName string `json:"userName"`
		RoleName string `json:"roleName"`
		CreateAt int64  `json:"createAt"`
		RoleUserInfo
	}

	ListUserRolesResp {
		ListResp
		RoleUsers []RoleUserDetail `json:"list"`
	}

	AddRoleForUserReq {
		UserId []int64 `json:"userId"`
		RoleId int64   `path:"roleId"`
	}

	AddRoleForUserResp {
		Id int64 `json:"id"`
	}

	RemoveRoleForUserReq {
		UserId []int64 `json:"user_id"`
		RoleId int64   `path:"role_id"`
	}

	RemoveRoleForUserResp {
	}

	UpdateRoleForUserReq {
		UserId []int64 `json:"user_id"`
		RoleId int64   `path:"role_id"`
	}

	UpdateRoleForUserResp {
	}

	ListAllUserRolesReq {
		ListReq
	}

	ListAllUserRolesResp {
		ListResp
		RoleUsers []RoleUserDetail `json:"list"`
	}
)

@server (
	group: role
	jwt: Auth
)
service User {
	@doc "获取角色信息"
	@handler GetRole
	get /role/:id(GetRoleReq) returns (GetRoleResp)
	
	@doc "创建角色"
	@handler CreateRole
	post /role(CreateRoleReq) returns (CreateRoleResp)
	
	@doc "角色列表"
	@handler ListRole
	get /role(ListRoleReq) returns (ListRoleResp)
	
	@doc "删除角色"
	@handler DeleteRole
	delete /role/:id(DeleteRoleReq) returns (DeleteRoleResp)
	
	@doc "全量更新角色"
	@handler UpdateRole
	put /role/:id (UpdateRoleReq) returns (UpdateRoleResp)
	
	@doc "更新角色部分信息"
	@handler PatchRole
	patch /role/:id (PatchRoleReq) returns (PatchRoleResp)
	
	@doc "所属角色的用户"
	@handler ListUserRoles
	get /role/:role_id/user(ListUserRolesReq) returns(ListUserRolesResp)
	
	@doc "为用户添加角色"
	@handler AddRoleForUser
	post /role/:role_id/user(AddRoleForUserReq) returns(AddRoleForUserResp)
	
	@doc "为用户删除角色"
	@handler RemoveRoleForUser
	delete /role/:role_id/user/:user_id(RemoveRoleForUserReq) returns(RemoveRoleForUserResp)
	
	@doc "更新用户的角色相关信息"
	@handler UpdateRoleForUser
	patch /role/:role_id/user/:user_id(UpdateRoleForUserReq) returns(RemoveRoleForUserResp)
	
	@doc "列出所有用户角色列表"
	@handler ListAllUserRolesReq
	get /role/user (ListAllUserRolesReq) returns(ListAllUserRolesResp);
}