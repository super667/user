// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"
	authservicelogic "github.com/super667/user/user/rpc/internal/logic/authservice"

	"github.com/super667/user/user/rpc/internal/svc"
	"github.com/super667/user/user/rpc/user"
)

type AuthServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedAuthServiceServer
}

func NewAuthServiceServer(svcCtx *svc.ServiceContext) *AuthServiceServer {
	return &AuthServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *AuthServiceServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := authservicelogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *AuthServiceServer) Logout(ctx context.Context, in *user.LogoutReq) (*user.LogoutResp, error) {
	l := authservicelogic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

func (s *AuthServiceServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := authservicelogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *AuthServiceServer) FreshToken(ctx context.Context, in *user.RefreshTokenReq) (*user.RefreshTokenResp, error) {
	l := authservicelogic.NewFreshTokenLogic(ctx, s.svcCtx)
	return l.FreshToken(in)
}

func (s *AuthServiceServer) BlackListToken(ctx context.Context, in *user.BlackListTokenReq) (*user.BlackListTokenResp, error) {
	l := authservicelogic.NewBlackListTokenLogic(ctx, s.svcCtx)
	return l.BlackListToken(in)
}
