// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"github.com/super667/user/rpc/internal/logic/roleservice"
	"github.com/super667/user/rpc/internal/svc"
	"github.com/super667/user/rpc/user"
)

type RoleServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedRoleServiceServer
}

func NewRoleServiceServer(svcCtx *svc.ServiceContext) *RoleServiceServer {
	return &RoleServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServiceServer) GetRoleById(ctx context.Context, in *user.GetRoleByIdReq) (*user.GetRoleByIdResp, error) {
	l := roleservicelogic.NewGetRoleByIdLogic(ctx, s.svcCtx)
	return l.GetRoleById(in)
}

func (s *RoleServiceServer) CreateRole(ctx context.Context, in *user.CreateRoleReq) (*user.CreateRoleResp, error) {
	l := roleservicelogic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

func (s *RoleServiceServer) DeleteRole(ctx context.Context, in *user.DeleteRoleReq) (*user.DeleteRoleResp, error) {
	l := roleservicelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServiceServer) UpdateRole(ctx context.Context, in *user.UpdateRoleReq) (*user.UpdateRoleResp, error) {
	l := roleservicelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleServiceServer) PatchRole(ctx context.Context, in *user.PatchRoleReq) (*user.PatchRoleResp, error) {
	l := roleservicelogic.NewPatchRoleLogic(ctx, s.svcCtx)
	return l.PatchRole(in)
}

func (s *RoleServiceServer) ListRole(ctx context.Context, in *user.ListRoleReq) (*user.ListRoleResp, error) {
	l := roleservicelogic.NewListRoleLogic(ctx, s.svcCtx)
	return l.ListRole(in)
}

func (s *RoleServiceServer) ListAllRoleUsers(ctx context.Context, in *user.ListAllRoleUsersReq) (*user.ListAllRoleUsersResp, error) {
	l := roleservicelogic.NewListAllRoleUsersLogic(ctx, s.svcCtx)
	return l.ListAllRoleUsers(in)
}

func (s *RoleServiceServer) ListRoleUser(ctx context.Context, in *user.ListRoleForUserReq) (*user.ListRoleForUserResp, error) {
	l := roleservicelogic.NewListRoleUserLogic(ctx, s.svcCtx)
	return l.ListRoleUser(in)
}

func (s *RoleServiceServer) AddRoleForUser(ctx context.Context, in *user.AddRoleForUserReq) (*user.AddRoleForUserResp, error) {
	l := roleservicelogic.NewAddRoleForUserLogic(ctx, s.svcCtx)
	return l.AddRoleForUser(in)
}

func (s *RoleServiceServer) RemoveRoleForUser(ctx context.Context, in *user.RemoveRoleForUserReq) (*user.RemoveRoleForUserResp, error) {
	l := roleservicelogic.NewRemoveRoleForUserLogic(ctx, s.svcCtx)
	return l.RemoveRoleForUser(in)
}

func (s *RoleServiceServer) UpdateRoleForUser(ctx context.Context, in *user.UpdateRoleForUserReq) (*user.UpdateRoleForUserResp, error) {
	l := roleservicelogic.NewUpdateRoleForUserLogic(ctx, s.svcCtx)
	return l.UpdateRoleForUser(in)
}
