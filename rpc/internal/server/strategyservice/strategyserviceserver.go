// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"github.com/super667/user/rpc/internal/logic/strategyservice"
	"github.com/super667/user/rpc/internal/svc"
	"github.com/super667/user/rpc/user"
)

type StrategyServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedStrategyServiceServer
}

func NewStrategyServiceServer(svcCtx *svc.ServiceContext) *StrategyServiceServer {
	return &StrategyServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *StrategyServiceServer) GetStrategyById(ctx context.Context, in *user.GetStrategyByIdReq) (*user.GetStrategyByIdResp, error) {
	l := strategyservicelogic.NewGetStrategyByIdLogic(ctx, s.svcCtx)
	return l.GetStrategyById(in)
}

func (s *StrategyServiceServer) CreateStrategy(ctx context.Context, in *user.CreateStrategyReq) (*user.CreateStrategyResp, error) {
	l := strategyservicelogic.NewCreateStrategyLogic(ctx, s.svcCtx)
	return l.CreateStrategy(in)
}

func (s *StrategyServiceServer) DeleteStrategy(ctx context.Context, in *user.DeleteStrategyReq) (*user.DeleteStrategyResp, error) {
	l := strategyservicelogic.NewDeleteStrategyLogic(ctx, s.svcCtx)
	return l.DeleteStrategy(in)
}

func (s *StrategyServiceServer) UpdateStrategy(ctx context.Context, in *user.UpdateStrategyReq) (*user.UpdateStrategyResp, error) {
	l := strategyservicelogic.NewUpdateStrategyLogic(ctx, s.svcCtx)
	return l.UpdateStrategy(in)
}

func (s *StrategyServiceServer) PatchStrategy(ctx context.Context, in *user.PatchStrategyReq) (*user.PatchStrategyResp, error) {
	l := strategyservicelogic.NewPatchStrategyLogic(ctx, s.svcCtx)
	return l.PatchStrategy(in)
}

func (s *StrategyServiceServer) ListStrategy(ctx context.Context, in *user.ListStrategyReq) (*user.ListStrategyResp, error) {
	l := strategyservicelogic.NewListStrategyLogic(ctx, s.svcCtx)
	return l.ListStrategy(in)
}
