// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"user/rpc/internal/logic"
	"user/rpc/internal/svc"
	"user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

// 用户相关接口
func (s *UserServer) GetUserById(ctx context.Context, in *user.GetUserByIdReq) (*user.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserServer) GetUserByNumber(ctx context.Context, in *user.GetUserByNumberReq) (*user.GetUserByNumberResp, error) {
	l := logic.NewGetUserByNumberLogic(ctx, s.svcCtx)
	return l.GetUserByNumber(in)
}

func (s *UserServer) GetUserByName(ctx context.Context, in *user.GetUserByNameReq) (*user.GetUserByNameResp, error) {
	l := logic.NewGetUserByNameLogic(ctx, s.svcCtx)
	return l.GetUserByName(in)
}

func (s *UserServer) CreateUser(ctx context.Context, in *user.CreateUserReq) (*user.CreateUserResp, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) DeleteUser(ctx context.Context, in *user.DeleteUserReq) (*user.DeleteUserResp, error) {
	l := logic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *user.UpdateUserReq) (*user.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServer) PatchUser(ctx context.Context, in *user.PatchUserReq) (*user.PatchUserResp, error) {
	l := logic.NewPatchUserLogic(ctx, s.svcCtx)
	return l.PatchUser(in)
}

func (s *UserServer) ListUser(ctx context.Context, in *user.ListUserReq) (*user.ListUserResp, error) {
	l := logic.NewListUserLogic(ctx, s.svcCtx)
	return l.ListUser(in)
}
